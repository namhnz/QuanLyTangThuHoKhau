<UserControl x:Class="QuanLyTangThuHoKhau.QuanLyDuLieu.Views.QuanLyDuLieuRootView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QuanLyTangThuHoKhau.QuanLyDuLieu.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:qldlTypes="clr-namespace:QuanLyTangThuHoKhau.QuanLyDuLieu.Types"
             xmlns:qldlCoreTypes="clr-namespace:QuanLyTangThuHoKhau.Core.Types.QuanLyDuLieu;assembly=QuanLyTangThuHoKhau.Core"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Menu>
                <MenuItem Header="Theme">
                    <!-- <ui:RadioMenuItem -->
                    <!--     Header="Default" -->
                    <!--     IsChecked="{Binding ApplicationTheme, Source={x:Static sc:ThemeManagerProxy.Current}, Mode=OneWay, Converter={StaticResource IsDefaultConverter}}" -->
                    <!--     Checked="Default_Checked" /> -->
                    <!-- <ui:RadioMenuItem -->
                    <!--     Header="Light" -->
                    <!--     IsChecked="{Binding ApplicationTheme, Source={x:Static sc:ThemeManagerProxy.Current}, Mode=OneWay, Converter={StaticResource IsLightConverter}}" -->
                    <!--     Checked="Light_Checked" /> -->
                    <!-- <ui:RadioMenuItem -->
                    <!--     Header="Dark" -->
                    <!--     IsChecked="{Binding ApplicationTheme, Source={x:Static sc:ThemeManagerProxy.Current}, Mode=OneWay, Converter={StaticResource IsDarkConverter}}" -->
                    <!--     Checked="Dark_Checked" /> -->
                </MenuItem>
                <!-- <MenuItem -->
                <!--     x:Name="PresetsMenu" -->
                <!--     Header="Presets" -->
                <!--     MenuItem.Click="PresetMenuItem_Click"> -->
                <!--     <ui:RadioMenuItem -->
                <!--         Header="Default" -->
                <!--         IsChecked="True" /> -->
                <!--     <ui:RadioMenuItem Header="Forest" /> -->
                <!--     <ui:RadioMenuItem Header="Lavender" /> -->
                <!--     <ui:RadioMenuItem Header="Nighttime" /> -->
                <!-- </MenuItem> -->
                <!-- <MenuItem -->
                <!--     Header="Sizing" -->
                <!--     MenuItem.Click="SizingMenuItem_Click"> -->
                <!--     <ui:RadioMenuItem -->
                <!--         Header="Standard" -->
                <!--         IsChecked="True" /> -->
                <!--     <ui:RadioMenuItem -->
                <!--         Header="Compact" -->
                <!--         Tag="Compact" /> -->
                <!-- </MenuItem> -->
                <!-- <MenuItem -->
                <!--     Header="Title Bar" -->
                <!--     DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}"> -->
                <!--     <MenuItem -->
                <!--         Header="IsBackButtonVisible" -->
                <!--         IsEnabled="False" -->
                <!--         IsCheckable="True" -->
                <!--         IsChecked="{Binding Path=(ui:TitleBar.IsBackButtonVisible), Mode=OneWay}" /> -->
                <!--     <MenuItem -->
                <!--         Header="IsIconVisible" -->
                <!--         IsCheckable="True" -->
                <!--         IsChecked="{Binding Path=(ui:TitleBar.IsIconVisible)}" /> -->
                <!-- </MenuItem> -->
                <!-- <MenuItem Header="Shadows"> -->
                <!--     <ui:RadioMenuItem -->
                <!--         x:Name="ShadowsAuto" -->
                <!--         Header="Use system setting" -->
                <!--         IsChecked="True" -->
                <!--         Checked="ShadowsAuto_Checked" /> -->
                <!--     <ui:RadioMenuItem -->
                <!--         x:Name="ShadowsEnabled" -->
                <!--         Header="Enabled" -->
                <!--         Checked="ShadowsEnabled_Checked" /> -->
                <!--     <ui:RadioMenuItem -->
                <!--         x:Name="ShadowsDisabled" -->
                <!--         Header="Disabled" -->
                <!--         Checked="ShadowsDisabled_Checked" /> -->
                <!-- </MenuItem> -->
                <MenuItem Header="Settings">
                    <MenuItem Header="Automatically hide scroll bars">
                        <ui:RadioMenuItem
                            x:Name="AutoHideScrollBarsAuto"
                            Header="Use system setting"
                            IsChecked="True"/>
                        <ui:RadioMenuItem
                            x:Name="AutoHideScrollBarsOn"
                            Header="On"/>
                        <ui:RadioMenuItem
                            x:Name="AutoHideScrollBarsOff"
                            Header="Off"/>
                    </MenuItem>
                </MenuItem>
                <!-- <MenuItem -->
                <!--     x:Name="DebugMenuItem" -->
                <!--     Header="Debug" -->
                <!--     Visibility="Collapsed"> -->
                <!--     <MenuItem -->
                <!--         Header="Force GC" -->
                <!--         Click="ForceGC" /> -->
                <!--     <MenuItem -->
                <!--         x:Name="NewWindowMenuItem" -->
                <!--         Header="New window" -->
                <!--         Visibility="Collapsed" -->
                <!--         Click="NewWindow" /> -->
                <!-- </MenuItem> -->
            </Menu>

        </Grid>

        <DockPanel
            Grid.Row="1"
            Background="{DynamicResource NavigationViewExpandedPaneBackground}">

            <ui:ListView
                x:Name="ViewNavigationListView"
                DockPanel.Dock="Top"
                DisplayMemberPath="NavigationTitle"
                SelectedValuePath="ViewType"
                SelectedValue="{Binding SelectedViewHienThi, Mode=TwoWay}"
                ItemsSource="{Binding CacChucNangViewList}">
            </ui:ListView>
        </DockPanel>

        <!-- <sc:SampleFrame -->
        <!--     x:Name="rootFrame" -->
        <!--     Grid.Row="1" -->
        <!--     Grid.Column="1" -->
        <!--     Navigating="RootFrame_Navigating" -->
        <!--     Navigated="RootFrame_Navigated" /> -->
        <ContentControl
            Grid.Row="1"
            Grid.Column="1"
            prism:RegionManager.RegionName="{x:Static qldlCoreTypes:QuanLyDuLieuRegionNames.QUAN_LY_DU_LIEU_ROOT_REGION}"
                        x:Name="QuanLyDuLieuRootContentPresenterContentControl">
        </ContentControl>
    </Grid>
</UserControl>
